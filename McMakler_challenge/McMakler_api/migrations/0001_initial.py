# Generated by Django 3.2.7 on 2021-09-14 18:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('first_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('change_message', models.TextField()),
                ('action_flag', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mcmackler',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='Id', primary_key=True, serialize=False)),
                ('mssubclass', models.IntegerField(blank=True, db_column='MSSubClass', null=True)),
                ('mszoning', models.TextField(blank=True, db_column='MSZoning', null=True)),
                ('lotfrontage', models.TextField(blank=True, db_column='LotFrontage', null=True)),
                ('lotarea', models.IntegerField(blank=True, db_column='LotArea', null=True)),
                ('street', models.TextField(blank=True, db_column='Street', null=True)),
                ('alley', models.TextField(blank=True, db_column='Alley', null=True)),
                ('lotshape', models.TextField(blank=True, db_column='LotShape', null=True)),
                ('landcontour', models.TextField(blank=True, db_column='LandContour', null=True)),
                ('utilities', models.TextField(blank=True, db_column='Utilities', null=True)),
                ('lotconfig', models.TextField(blank=True, db_column='LotConfig', null=True)),
                ('landslope', models.TextField(blank=True, db_column='LandSlope', null=True)),
                ('neighborhood', models.TextField(blank=True, db_column='Neighborhood', null=True)),
                ('condition1', models.TextField(blank=True, db_column='Condition1', null=True)),
                ('condition2', models.TextField(blank=True, db_column='Condition2', null=True)),
                ('bldgtype', models.TextField(blank=True, db_column='BldgType', null=True)),
                ('housestyle', models.TextField(blank=True, db_column='HouseStyle', null=True)),
                ('overallqual', models.IntegerField(blank=True, db_column='OverallQual', null=True)),
                ('overallcond', models.IntegerField(blank=True, db_column='OverallCond', null=True)),
                ('yearbuilt', models.IntegerField(blank=True, db_column='YearBuilt', null=True)),
                ('yearremodadd', models.IntegerField(blank=True, db_column='YearRemodAdd', null=True)),
                ('roofstyle', models.TextField(blank=True, db_column='RoofStyle', null=True)),
                ('roofmatl', models.TextField(blank=True, db_column='RoofMatl', null=True)),
                ('exterior1st', models.TextField(blank=True, db_column='Exterior1st', null=True)),
                ('exterior2nd', models.TextField(blank=True, db_column='Exterior2nd', null=True)),
                ('masvnrtype', models.TextField(blank=True, db_column='MasVnrType', null=True)),
                ('masvnrarea', models.IntegerField(blank=True, db_column='MasVnrArea', null=True)),
                ('exterqual', models.TextField(blank=True, db_column='ExterQual', null=True)),
                ('extercond', models.TextField(blank=True, db_column='ExterCond', null=True)),
                ('foundation', models.TextField(blank=True, db_column='Foundation', null=True)),
                ('bsmtqual', models.TextField(blank=True, db_column='BsmtQual', null=True)),
                ('bsmtcond', models.TextField(blank=True, db_column='BsmtCond', null=True)),
                ('bsmtexposure', models.TextField(blank=True, db_column='BsmtExposure', null=True)),
                ('bsmtfintype1', models.TextField(blank=True, db_column='BsmtFinType1', null=True)),
                ('bsmtfinsf1', models.IntegerField(blank=True, db_column='BsmtFinSF1', null=True)),
                ('bsmtfintype2', models.TextField(blank=True, db_column='BsmtFinType2', null=True)),
                ('bsmtfinsf2', models.IntegerField(blank=True, db_column='BsmtFinSF2', null=True)),
                ('bsmtunfsf', models.IntegerField(blank=True, db_column='BsmtUnfSF', null=True)),
                ('totalbsmtsf', models.IntegerField(blank=True, db_column='TotalBsmtSF', null=True)),
                ('heating', models.TextField(blank=True, db_column='Heating', null=True)),
                ('heatingqc', models.TextField(blank=True, db_column='HeatingQC', null=True)),
                ('centralair', models.TextField(blank=True, db_column='CentralAir', null=True)),
                ('electrical', models.TextField(blank=True, db_column='Electrical', null=True)),
                ('number_1stflrsf', models.IntegerField(blank=True, db_column='1stFlrSF', null=True)),
                ('number_2ndflrsf', models.IntegerField(blank=True, db_column='2ndFlrSF', null=True)),
                ('lowqualfinsf', models.IntegerField(blank=True, db_column='LowQualFinSF', null=True)),
                ('grlivarea', models.IntegerField(blank=True, db_column='GrLivArea', null=True)),
                ('bsmtfullbath', models.IntegerField(blank=True, db_column='BsmtFullBath', null=True)),
                ('bsmthalfbath', models.IntegerField(blank=True, db_column='BsmtHalfBath', null=True)),
                ('fullbath', models.IntegerField(blank=True, db_column='FullBath', null=True)),
                ('halfbath', models.IntegerField(blank=True, db_column='HalfBath', null=True)),
                ('bedroomabvgr', models.IntegerField(blank=True, db_column='BedroomAbvGr', null=True)),
                ('kitchenabvgr', models.IntegerField(blank=True, db_column='KitchenAbvGr', null=True)),
                ('kitchenqual', models.TextField(blank=True, db_column='KitchenQual', null=True)),
                ('totrmsabvgrd', models.IntegerField(blank=True, db_column='TotRmsAbvGrd', null=True)),
                ('functional', models.TextField(blank=True, db_column='Functional', null=True)),
                ('fireplaces', models.IntegerField(blank=True, db_column='Fireplaces', null=True)),
                ('fireplacequ', models.TextField(blank=True, db_column='FireplaceQu', null=True)),
                ('garagetype', models.TextField(blank=True, db_column='GarageType', null=True)),
                ('garageyrblt', models.IntegerField(blank=True, db_column='GarageYrBlt', null=True)),
                ('garagefinish', models.TextField(blank=True, db_column='GarageFinish', null=True)),
                ('garagecars', models.IntegerField(blank=True, db_column='GarageCars', null=True)),
                ('garagearea', models.IntegerField(blank=True, db_column='GarageArea', null=True)),
                ('garagequal', models.TextField(blank=True, db_column='GarageQual', null=True)),
                ('garagecond', models.TextField(blank=True, db_column='GarageCond', null=True)),
                ('paveddrive', models.TextField(blank=True, db_column='PavedDrive', null=True)),
                ('wooddecksf', models.IntegerField(blank=True, db_column='WoodDeckSF', null=True)),
                ('openporchsf', models.IntegerField(blank=True, db_column='OpenPorchSF', null=True)),
                ('enclosedporch', models.IntegerField(blank=True, db_column='EnclosedPorch', null=True)),
                ('number_3ssnporch', models.IntegerField(blank=True, db_column='3SsnPorch', null=True)),
                ('screenporch', models.IntegerField(blank=True, db_column='ScreenPorch', null=True)),
                ('poolarea', models.IntegerField(blank=True, db_column='PoolArea', null=True)),
                ('poolqc', models.TextField(blank=True, db_column='PoolQC', null=True)),
                ('fence', models.TextField(blank=True, db_column='Fence', null=True)),
                ('miscfeature', models.TextField(blank=True, db_column='MiscFeature', null=True)),
                ('miscval', models.IntegerField(blank=True, db_column='MiscVal', null=True)),
                ('mosold', models.IntegerField(blank=True, db_column='MoSold', null=True)),
                ('yrsold', models.IntegerField(blank=True, db_column='YrSold', null=True)),
                ('saletype', models.TextField(blank=True, db_column='SaleType', null=True)),
                ('salecondition', models.TextField(blank=True, db_column='SaleCondition', null=True)),
                ('saleprice', models.IntegerField(blank=True, db_column='SalePrice', null=True)),
            ],
            options={
                'db_table': 'McMackler',
                'managed': False,
            },
        ),
    ]
